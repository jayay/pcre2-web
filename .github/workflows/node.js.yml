# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]
  release:
    types: [ created ]

jobs:
  build:

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [17.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install clang
      run: |
        echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-14 main" | sudo tee -a /etc/apt/sources.list;
        echo "deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-14 main" | sudo tee -a /etc/apt/sources.list;
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -;
        sudo apt-get update;
        sudo apt-get install clang-14 lld-14

    - name: Install compiler-rt
      run: cd /tmp && wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-16/libclang_rt.builtins-wasm32-wasi-16.0.tar.gz && sudo tar -xvf libclang_rt.builtins-wasm32-wasi-16.0.tar.gz -C /usr/lib/llvm-14/lib/clang/14.0.6
    - name: Install wasi-libc sysroot
      run: cd /tmp && wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-16/wasi-sysroot-16.0.tar.gz && tar -xvf wasi-sysroot-16.0.tar.gz

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: append path for wasm-ld
      run: echo "/usr/lib/llvm-14/bin" >> $GITHUB_PATH
    - name: Show PATH variable
      run: echo $PATH
    - run: llc --version
    - run: npm ci
    - run: npm run compile
    - run: npm run build --if-present
    - run: npm test
    - uses: actions/upload-artifact@v3
      with:
        name: pkg-${{ matrix.node-version }}
        path: pkg/
        if-no-files-found: error

  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      - run: npm ci
      - run: $(npm bin)/eslint .

  release:
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: [ build ]
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@jayay'
      - run: npm ci
      - uses: actions/download-artifact@v3
        with:
          name: pkg-18.x
          path: pkg
      - run: npm run release
        env:
          PACKAGE_VERSION: ${{ github.ref_name }}
      - run: npm publish pkg/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
