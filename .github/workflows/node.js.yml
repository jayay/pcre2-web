# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - uses: cachix/cachix-action@v14
        with:
          name: jayay
          # If you chose API tokens for write access OR if you have a private cache
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - run: nix-build ./package.nix

      - uses: actions/upload-artifact@v4
        with:
          name: pkg
          path: result/
          if-no-files-found: error

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "npm"
      - run: npm ci
      - run: node_modules/.bin/eslint .

  release:
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v5
        with:
          node-version: "18.x"
          registry-url: "https://npm.pkg.github.com"
          scope: "@jayay"
      - run: npm ci
      - uses: actions/download-artifact@v4
        with:
          name: pkg
          path: pkg
      - run: npm run release
        env:
          PACKAGE_VERSION: ${{ github.ref_name }}
      - run: npm publish pkg/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
